extensions:
  health_check:

receivers:

  otlp/agent-auth:
    protocols:
      grpc:
        endpoint: localhost:55680

  otlp/agent-noauth:
    protocols:
      grpc:
        endpoint: localhost:55685

  otlp/collector:
    protocols:
      grpc:
        endpoint: localhost:55690
        tls_settings:
          key_file: ./test/certs/cert-key.pem
          cert_file: ./test/certs/cert.pem
        auth:
          oidc:
            # should match the "issuer" field in dex.yaml
            issuer_url: https://127.0.0.1:5556/dex
            audience: test
            issuer_ca_path: ./test/certs/ca.pem
            username_claim: email

processors:
  # this processor will read an env var named OTEL_RESOURCE (key=value,key2=value2) and add each key-value pair as a resource attribute
  resourcedetection:
    detectors:
      - env

  # this routing table will always route spans to the 'jaeger' exporter
  routing:
    default_exporters:
    - jaeger
    from_attribute: X-Tenant
    table:
    - value: test
      exporters:
      - jaeger

exporters:

  otlp/collector-auth:
    endpoint: localhost:55690
    ca_file: ./test/certs/ca.pem
    per_rpc_auth:
      type: bearer
      bearer_token: the-token # this will be replaced by the test script

  otlp/collector-noauth:
    endpoint: localhost:55690
    ca_file: ./test/certs/ca.pem

  jaeger:
    endpoint: localhost:14250
    insecure: true

  logging:
    loglevel: debug
service:
  extensions: [health_check]
  pipelines:

    # a pipeline where we try to export to the collector without sending auth data
    # should never succeed in exporting traces
    traces/agent-auth:
      receivers:
        - otlp/agent-auth
      processors: []
      exporters:
        - logging
        - otlp/collector-auth

    # a pipeline where we try to export to the collector with auth data
    # should succeed in exporting traces
    traces/agent-noauth:
      receivers:
        - otlp/agent-noauth
      processors: []
      exporters:
        - logging
        - otlp/collector-noauth

    # the pipeline that we expect Observatorium OpenTelemetry Collector to use
    traces/collector:
      receivers:
        - otlp/collector
      processors:
        - resourcedetection
        - routing
      exporters:
        - logging
        - jaeger
